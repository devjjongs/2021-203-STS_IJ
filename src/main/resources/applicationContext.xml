<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <beans:bean id="hi" class="x.y.impl.HelloBeanImpl"></beans:bean>
    <beans:bean class="x.y.p36.Bar" id="bar" />
    <beans:bean class="x.y.p36.Baz" id="baz" />
    <beans:bean class="x.y.p36.Foo" id="foo">
        <beans:constructor-arg index="1" ref="baz" />
        <beans:constructor-arg index="0">
            <beans:ref bean="bar" />
        </beans:constructor-arg>

    </beans:bean>
    <beans:bean class="x.y.impl.GreetingServiceImpl"
                id="greeting" />

    <beans:bean class="x.y.impl.GreetingServiceImpl"
                id="greeting1">
        <beans:constructor-arg value="안녕" />
        <beans:constructor-arg>
            <beans:value>3</beans:value>
        </beans:constructor-arg>

    </beans:bean>



    <!-- p40 -->
    <beans:bean id="fooP40" class="x.y.p40.Foo">
        <beans:property name="bar40">
            <beans:ref bean="barP40" />
        </beans:property>
    </beans:bean>

    <beans:bean id="barP40" class="x.y.p40.Bar" />

    <beans:bean id="fooP41" class="x.y.p40.Foo"
                p:bar40-ref="barP40" />
    <!-- <beans:property name="bar40" > <beans:ref bean="barP40"/> </beans:property>
        </beans:bean> -->


    <!-- page42 -->
    <beans:bean id="bar42" class="x.y.p42.Bar42" />
    <beans:bean id="foo42" class="x.y.p42.Foo42">
        <beans:lookup-method bean="bar42" name="getBar42" />
    </beans:bean>


    <!-- p46 -->
    <beans:bean class="x.y.p46.CalculatorServiceImpl"
                id="calculator">
        <beans:property name="valueList">
            <beans:list>
                <beans:value type="java.lang.Integer">10</beans:value>
                <beans:value>Kim Mal Ja</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- p48 -->
    <beans:bean class="x.y.p46.CalculatorServiceImpl"
                id="calculator48">
        <beans:property name="properties">
            <beans:props>
                <beans:prop key="server">192.168.1.10</beans:prop>
                <beans:prop key="timeout">5000</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>


    <!-- 46 48 -->
    <beans:bean class="x.y.p46.CalculatorServiceImpl"
                id="calculator46_48">
        <beans:property name="properties">
            <beans:props>
                <beans:prop key="server">192.168.1.10</beans:prop>
                <beans:prop key="timeout">5000</beans:prop>
            </beans:props>
        </beans:property>

        <beans:property name="valueList">
            <beans:list>
                <beans:value type="java.lang.Integer">10</beans:value>
                <beans:value>Kim Mal Ja</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>


    <!-- SpringAppScopeTest 사용할 p36.Bar p36.Baz p36.Foo 빈을 만들어서 사용 -->

    <beans:bean class="x.y.p36.Bar" id="barScopeSingle" /> <!--  -->
    <beans:bean class="x.y.p36.Bar" id="barScopeProt"
                scope="prototype" />

    <!-- byName : 프로퍼티의 이름과 같은 이름을 갖는 빈 객체를 설정 -->
    <!-- byType : 프로퍼티의 타입과 같은 타입을 갖는 빈 객체를 설정 -->
    <!-- constructor : 생성자 파라미터 타입과 같은 타입을 갖는 빈 객체를 생성자에 전달 -->
    <!-- autodetect : constructor 방식을 먼저 적용하고, byType 방식을 적용하여 의존 객체를 설정 -->
    <!-- p50 -->
    <!-- 	<beans:bean id="greetingP50" class="x.y.impl.GreetingServiceImpl" autowire="byName" />
        <beans:bean id="outputter" class="x.y.impl.OutputServiceImplConsole" />
    -->

    <!-- p51 -->
    <!--	<beans:bean id="greetingP51" class="x.y.impl.GreetingServiceImpl" autowire="byType"/>
        <beans:bean id="consoleOutput" class="x.y.impl.OutputServiceImplConsole"/>
    -->

    <!-- p52 -->
    <beans:bean id="greetingP52" class="x.y.impl.GreetingServiceImpl2" autowire="constructor"/>
    <beans:bean id="consoleOutput" class="x.y.impl.OutputServiceImplConsole"/>

</beans:beans>











